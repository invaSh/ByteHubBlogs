@model Main.Models.ViewModels.EditBlogPostRequest
@{
    ViewData["Title"] = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container ">
        <h1 class="text-center">Edit BlogPost</h1>
    </div>
</div>

@if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
{
    <div class="alert alert-danger alert-dismissible fade show mt-5 pb-0" role="alert">
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        <ul>
            <li>@TempData["ErrorMessage"]</li>
        </ul>
    </div>
}

<div class="container py-5">
    @if (Model != null)
    {
        <form method="post" action="/Admin/BlogManager/Update/{id}">

            <div class="mb-3">
                <label class="form-label">Id</label>
                <input type="text" value="@Model.Id" class="form-control" id="id" name="Id" readonly />
            </div>


            <div class="mb-3">
                <label class="form-label">Heading</label>
                <input type="text" value="@Model.Heading" class="form-control" id="heading" name="Heading" />
            </div>

            <div class="mb-3">
                <label class="form-label">Page Title</label>
                <input type="text" value="@Model.Title" class="form-control" id="pageTitle" name="Title" />
            </div>

            <div class="mb-3">
                <label class="form-label">Content</label>
                <textarea type="text" class=" form-control" id="content" name="Content"> @Model.Content</textarea>
            </div>

            <div class="mb-3">
                <label class="form-label">Short Description</label>
                <input type="text" value="@Model.ShortDescription" class="form-control" id="shortDescription" name="ShortDescription" />
            </div>

            <div class="mb-3">
                <label class="form-label">Upload Image</label>
                <input type="file" id="featuredImageUpload" class="form-control" />
                <img src="" id="featuredImageDisplay" style="display:none; width: 300px" />
            </div>

            <div class="mb-3">
                <label class="form-label">Image URL</label>
                <input type="text" value="@Model.FeaturedImageURL" class="form-control" id="featuredImgURL" name="FeaturedImageURL" readonly/>
            </div>

            <div class="mb-3">
                <label class="form-label">URL Handle</label>
                <input type="text" value="@Model.UrlHandle" class="form-control" id="urlHandle" name="UrlHandle" />
            </div>

            <div class="mb-3" hidden>
                <label class="form-label">Published Date</label>
                <input type="date" value="@Model.PublishedDate.ToString("dd-MM-yyyy")" class="form-control" id="publishedDate" name="PublishedDate" />
            </div>

            <div class="mb-3">
                <label class="form-label">Author</label>
                <input type="text" value="@Model.Author" class="form-control" id="author" name="Author" readonly/>
            </div>

            <div class="mb-3">
                <label class="form-label">Tags</label>
                <select class="form-select" value="@Model.SelectedTags" name="SelectedTags" multiple="multiple">
                    @foreach (var tag in Model.Tags)
                    {
                        <option value="@tag.Value" selected="@Model.SelectedTags.Contains(tag.Value)">@tag.Text</option>
                    }
                </select>
            </div>

            <div class="mb-3 d-flex">
                <button type="submit" class="btn btn-outline-dark hover-text-dark">Update</button>
            </div>
        </form>

    }
    else
    {
        <h1>Model Not Found!</h1>
    }
</div>

@section Scripts {
    <script>

        var editor = new FroalaEditor('#content', {
            imageUploadURL: '/api/images'
        });

        const featuredUpload = document.getElementById('featuredImageUpload');
        const featuredImg = document.getElementById('featuredImgURL');
        const featuredImageDisplay = document.getElementById('featuredImageDisplay');

        async function uploadFeatureImg(e) {
            console.log(e.target.files[0]);

            let data = new FormData();
            data.append('file', e.target.files[0]);

            await fetch('/api/images', {
                method: 'POST',
                headers: {
                    'Accept': '*/*',
                },
                body: data
            }).then(response => response.json())
                .then(result => {
                    featuredImg.value = result.link;
                    featuredImageDisplay.src = result.link;
                    featuredImageDisplay.style.display = 'block';
                });
        }

        featuredUpload.addEventListener('change', uploadFeatureImg);
    </script>
}