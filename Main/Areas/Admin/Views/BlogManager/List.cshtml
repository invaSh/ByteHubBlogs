@using Main.Models.Domain
@model List<Main.Models.Domain.BlogPost>
@{
ViewData["Title"] = "List";
Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="bg-secondary bg-opacity-10 py-2">
<div class="container">
    <h1 class="text-center">All BlogPosts</h1>
</div>
</div>

<form method="get" class="my-5">
<div class="mb-3">
    <label for="tagDropdown" class="form-label">Select Tag:</label>
    <select id="tagDropdown" class="form-select" name="tagId">
        <option value="">-- Select Tag --</option>
        @foreach (var tag in ViewBag.Tags)
        {
            <option value="@tag.Id">@tag.DisplayName</option>
        }
    </select>
</div>
<div class="mb-3">
    <label for="orderByDropdown" class="form-label">Order by:</label>
    <select id="orderByDropdown" class="form-select" name="orderBy">
        <option value="Heading" selected>Heading</option>
        <option value="Id">ID</option>
    </select>
</div>
<button type="submit" class="btn btn-dark">Filter</button>
</form>

<div class="container">
@if (Model != null && Model.Any())
{
    var orderBy = Context.Request.Query["orderBy"];
    var orderedPosts = OrderBlogPosts(Model, orderBy);
        var count = 1;

    <table class="table table-striped mt-5">
        <thead>
            <tr>
                <td class="fw-bold">#</td>
                <td class="fw-bold">ID</td>
                <td class="fw-bold">HEADING</td>
                <td class="fw-bold">TAGS</td>
                <td class="fw-bold"></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var post in orderedPosts)
            {
                <tr>
                    <td class="fw-bold">@(count++)</td>
                    <td>@post.Id</td>
                    <td>@post.Heading</td>
                    <td>
                        <div class="d-flex flex-wrap">
                            @foreach (var tag in post.BlogPostTags)
                            {
                                <span class="badge bg-secondary mx-1 my-2">@tag.Tag.DisplayName</span>
                            }
                        </div>
                    </td>
                    <td>
                        <a href="@Url.Action("Details", "BlogManager", new { area = "Admin", id = post.Id })" class="btn btn-light btn-outline-dark hover-text-primary">
                            <i class="bi bi-info-circle"></i>
                            Details
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center mt-4">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link bg-dark text-light" href="?page=@i&tagId=@Context.Request.Query["tagId"]&orderBy=@Context.Request.Query["orderBy"]">@i</a>
                </li>
            }
        </ul>
    </nav>
}
else
{
    <h3 class="text-center mt-5">No blog posts found..</h3>
}
</div>

@functions {
private IEnumerable<Main.Models.Domain.BlogPost> OrderBlogPosts(List<Main.Models.Domain.BlogPost> posts, string orderBy)
{
    switch (orderBy)
    {
        case "Heading":
            return posts.OrderBy(post => post.Heading);
        case "Id":
            return posts.OrderBy(post => post.Id);
        default:
            return posts;
    }
}
}
